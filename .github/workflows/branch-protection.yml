name: Branch Protection

on:
  pull_request:
    branches: [ main, develop, test/branch-protection ]
  push:
    branches: [ main, develop, test/branch-protection ]

jobs:
  branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Enable Corepack
        run: |
          corepack enable
          echo "Node version: $(node --version)"
          echo "Yarn version: $(yarn --version)"
          yarn config list

      - name: Install dependencies
        run: |
          echo "=== Installing Dependencies ==="
          yarn install --immutable
          echo "\n=== Dependency Installation Complete ==="
          echo "Workspace node_modules:"
          ls -la node_modules/
          echo "\nShared package node_modules:"
          ls -la packages/shared/node_modules/ || echo "No node_modules directory in shared package"

      - name: Build shared package
        working-directory: packages/shared
        run: |
          echo "=== Building Shared Package ==="
          yarn build
          echo "Build output:"
          ls -la dist/

      - name: Run tests
        id: run_tests
        working-directory: packages/shared
        env:
          CI: true
          NODE_ENV: test
        run: |
          echo "=== Running Tests ==="
          echo "Test files:"
          find src -name "*.test.ts" -o -name "*.spec.ts"
          yarn test --verbose

      - name: Run linting
        id: run_lint
        working-directory: packages/shared
        run: |
          echo "=== Running Linting ==="
          yarn lint --max-warnings 0

      - name: Check branch protection
        id: check_protection
        uses: actions/github-script@v7
        with:
          script: |
            try {
              console.log('=== Checking Branch Protection ===');
              const targetBranch = context.payload.pull_request?.base?.ref || context.ref.replace('refs/heads/', '');
              console.log('Target branch:', targetBranch);

              const { data: branch } = await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: targetBranch
              });

              if (!branch.protected) {
                console.log('Warning: Branch is not protected. Protection rules should be enabled.');
                return;
              }

              const { data: protection } = await github.rest.repos.getBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: targetBranch
              });

              console.log('Protection rules:', JSON.stringify(protection, null, 2));
            } catch (error) {
              if (error.status === 404) {
                console.log('Branch protection not configured yet. This is expected for new branches.');
                return;
              }
              console.log('Error checking branch protection:', error.message);
            }

      - name: Report job status
        if: always()
        run: |
          echo "=== Job Status Report ==="
          echo "Test step status: ${{ steps.run_tests.outcome }}"
          echo "Lint step status: ${{ steps.run_lint.outcome }}"
          echo "Protection check status: ${{ steps.check_protection.outcome }}"
          
          if [ -f "packages/shared/test-output.log" ]; then
            echo "=== Test Output ==="
            cat packages/shared/test-output.log
          fi
          
          if [ -f "packages/shared/lint-output.log" ]; then
            echo "=== Lint Output ==="
            cat packages/shared/lint-output.log
          fi 