name: Branch Protection

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Verify yarn.lock exists
        run: |
          if [ ! -f "yarn.lock" ]; then
            echo "Error: yarn.lock file is missing"
            exit 1
          fi

      - name: Install dependencies
        run: |
          yarn set version stable
          yarn install --immutable

      - name: Run tests
        run: yarn test

      - name: Run linting
        run: yarn lint

      - name: Check types
        run: yarn type-check

      - name: Check branch protection
        uses: actions/github-script@v7
        with:
          script: |
            const { data: branch } = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.payload.pull_request?.base?.ref || context.ref.replace('refs/heads/', '')
            });

            if (!branch.protected) {
              core.setFailed('Branch is not protected. Please enable branch protection rules.');
            }

            const { data: protection } = await github.rest.repos.getBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.payload.pull_request?.base?.ref || context.ref.replace('refs/heads/', '')
            });

            const requiredChecks = [
              'branch-protection',
              'test',
              'lint',
              'type-check'
            ];

            const missingChecks = requiredChecks.filter(check => 
              !protection.required_status_checks?.contexts?.includes(check)
            );

            if (missingChecks.length > 0) {
              core.setFailed(`Missing required status checks: ${missingChecks.join(', ')}`);
            }

            if (!protection.required_pull_request_reviews?.required_approving_review_count) {
              core.setFailed('Pull request reviews are not required');
            }

            if (!protection.required_pull_request_reviews?.dismiss_stale_reviews) {
              core.setFailed('Stale reviews are not dismissed');
            }

            if (!protection.required_pull_request_reviews?.require_code_owner_reviews) {
              core.setFailed('Code owner reviews are not required');
            }

            if (!protection.allow_force_pushes?.enabled) {
              core.setFailed('Force pushes are not disabled');
            }

            if (!protection.allow_deletions?.enabled) {
              core.setFailed('Branch deletion is not disabled');
            } 